<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd         http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd     http://www.springframework.org/schema/data/jpa  http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">

    <description>定时任务配置</description>
     
    <!-- 配置定时任务 抓取数据-->
    <bean id="getdata" name="getdata" class="com.zol.backserver.service.DataService" />
    <bean id="methodInvokingJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	   <property name="targetObject">
	    	<ref bean="getdata" />
	   </property>
	   <property name="targetMethod">
	    	<value>getDataMethod</value>
	   </property>
	</bean>
    <!-- 配置触发器 -->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <!-- 这里不可以直接在属性jobDetail中引用taskJob，因为他要求的是一个jobDetail类型的对象，所以我们得通过MethodInvokingJobDetailFactoryBean来转一下 -->
       <property name="jobDetail">
           <ref bean="methodInvokingJobDetail" />
       </property>
       <!-- 每天8点至22点   每隔30分钟触发一次 -->
       <property name="cronExpression">
           <value>0 0/2 9-22 * * ?</value>
       </property>
    </bean>
    
    <!-- 配置定时任务 更新用户查询的刷新时间-->
    <bean id="referTime" name="referTime" class="com.zol.backserver.service.QueryReferTimeService" />
    <bean id="referTimeMethodInvokingJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	   <property name="targetObject">
	    	<ref bean="referTime" />
	   </property>
	   <property name="targetMethod">
	    	<value>quartzQueryTime</value>
	   </property>
	</bean>
    <!-- 配置触发器 -->
    <bean id="referTimeTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <!-- 这里不可以直接在属性jobDetail中引用taskJob，因为他要求的是一个jobDetail类型的对象，所以我们得通过MethodInvokingJobDetailFactoryBean来转一下 -->
       <property name="jobDetail">
           <ref bean="referTimeMethodInvokingJobDetail" />
       </property>
       <!-- 每天凌晨5点触发 -->
       <property name="cronExpression">
           <value>0 0 5 * * ? </value>
       </property>
    </bean>
    
    
    
     <!-- 配置定时任务 驱动浏览器去刷新时间-->
    <bean id="browsers" name="browsers" class="com.zol.backserver.service.DriverToBrowserService" />
    <bean id="browsersMethodInvokingJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	   <property name="targetObject">
	    	<ref bean="browsers" />
	   </property>
	   <property name="targetMethod">
	    	<value>testLexin</value>
	   </property>
	</bean>
    <!-- 配置触发器 -->
    <bean id="browsersTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <!-- 这里不可以直接在属性jobDetail中引用taskJob，因为他要求的是一个jobDetail类型的对象，所以我们得通过MethodInvokingJobDetailFactoryBean来转一下 -->
       <property name="jobDetail">
           <ref bean="browsersMethodInvokingJobDetail" />
       </property>
       <!-- 每小时每半小时驱动一次秒执行 -->
       <property name="cronExpression">
           <value>0 0/30 * * * ? </value>
       </property>
    </bean>
    
    
    
    
	
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
       <!-- 添加触发器 -->
       <property name="triggers">
           <list>
           	  <!-- 抓取数据 -->
              <ref local="cronTrigger" />
              <!-- 查询用户的刷新时间存进缓存 -->
              <ref local="referTimeTrigger" />
              <!-- 驱动浏览器去刷新 -->
              <ref local="browsersTrigger" />
           </list>
       </property>
    </bean>
    
    
</beans>
